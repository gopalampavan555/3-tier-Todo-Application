pipeline {
    agent any
    
    tools {
        jdk 'jdk17'
        nodejs 'nodejs'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar'
        APP_FNAME = "ui"
        APP_BNAME = "backend"
        APP_NAME = "3-tier-app"
        RELEASE = "1.0.0"
        IMAGE_NAME_FRONTEND = "kalyan555" + "/" + "$APP_FNAME"
        IMAGE_NAME_BACKEND = "kalyan555" + "/" + "$APP_BNAME"
        IMAGE_TAG = "${BUILD_NUMBER}"
    }

    stages {
        stage('Clear WorkSpace') {
            steps {
                cleanWs()
            }
        }
        
        stage('git checkout') {
            steps {
               git branch: 'master', url: 'https://github.com/gopalampavan555/3-tier-Todo-Application.git'
            }
        }
        
        stage('SonarQube Anlysis') {
            steps {
                dir('app/frontend/') {
                    withSonarQubeEnv ('sonar') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=$APP_NAME -Dsonar.projectKey=$APP_NAME'''
                    }
                }
            }
        }
        
        stage('Quality gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }
        
        stage('Trivy Filesystem scan') {
            steps {
                dir('app/frontend') {
                    sh "trivy fs --format table -o trivy-fs-report.html ."
                }
            }
        }
        
        stage('Build & Tag Frontend Docker Image'){
            steps {
                script {
                    dir('app/frontend') {
                        withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                           sh "docker build -t ${IMAGE_NAME_FRONTEND}:${IMAGE_TAG} ."
                        }
                    }
                }
            }
        }
        
        stage('Docker Build & Tag Backend Docker Image') {
            steps {
                script {
                    dir('app/backend') {
                        withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                            sh "docker build -t ${IMAGE_NAME_BACKEND}:${IMAGE_TAG} ."
                        }
                    }
                }
            }
        }
        
        stage('Image Scan') {
            steps {
                sh "trivy image ${IMAGE_NAME_FRONTEND}:${IMAGE_TAG} > trivy-frontend-image.txt"
                sh "trivy image ${IMAGE_NAME_BACKEND}:${IMAGE_TAG} > trivy-backend-image.txt"
            }
        }
        
        stage('Docker image push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh "docker push ${IMAGE_NAME_FRONTEND}:${IMAGE_TAG}"
                        sh "docker push ${IMAGE_NAME_BACKEND}:${IMAGE_TAG}"
                    }
                }
            }
        }
    }

    post {
        success {
            build job: '3-tier-CD', parameters: [string(name: 'TAG_NAME', value: env.IMAGE_TAG)]
        }
    }
}
